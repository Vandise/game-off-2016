%moduleName MisParser
%mode LALR

%left 'T_MULTIPLY' 'T_DIVIDE'
%left 'T_PLUS' 'T_MINUS'
%left 'T_GT' 'T_GE' 'T_LT' 'T_LE'
%left 'T_COLONEQUAL' 'T_NOT_EQUAL'

Program = { Expressions } function(expressions){ return expressions; };

Expressions = 
    Expression function(expression) {
      return new imports.ast.BranchNode([expression]);
    }
  | Expressions Terminator Expression function(expressions, _, expression) {
      expressions.pushNode(expression);
      return expressions;
    }
  /*
  | Expressions Terminator function(exp, _) {
      console.log('Single expression');
    }
  */
  ;

Expression =
    Literal
  ;

Literal =
    'T_STRING' function(string) {
      return new imports.ast.LiteralNode(string);
    }
  | 'T_INTEGER' function(integer) {
      return new imports.ast.LiteralNode(integer);
    }
  ;

Terminator =
    'T_TERMINATOR'
  ;